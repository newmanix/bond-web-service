<html>
<!--
 /**
 * custom-elements-final.htm
 * 
 * these files are based on filter.htm begins a series of files that will show how to filter and parse 
 * data JSON data returned via web services. 
 *
 * This file is based on index.htm which is a demo file to  
 * work with a sample API file to be called via AJAX to 
 * deliver the contents of 2 JSON files, one of which orders the 
 * data by year, the other by Box Office results.
 *
 * Custom select box is by Joe Marini from a lynda.com video series, Practical and Effective JavaScript:
 * http://www.lynda.com/JavaScript-tutorials/practical-and-effective-javascript/781-2.html
 *
 * The api page can be called via AJAX either via GET or POST, using a variable 
 * named "cat":
 *
 * <code>
 * api.php?cat=box
 * </code>
 *
 * In the example above, the parameter cat is loaded with the string "box" 
 * which will indicate to the API to load the JSON file containing 
 * box office results.
 *
 * For troubleshooting, swap out the bondJSON() function with toConsole() 
 * to examine the raw data returned
 *
 * @package bond-web-consumer
 * @author Bill Newman
 * @version 1.02 2015/02/24
 * @link https://github.com/newmanix/bond-web-service 
 * @license http://www.apache.org/licenses/LICENSE-2.0
 * @see api.php
 * @todo none
 */
-->
<head>
<title>Custom Elements</title>
<style>
body {font-family:georgia;}
#films {
	max-width:600px;
	margin:5px;
	padding:2px;
}
#films > div {
	padding:5px;
	min-height:40px;
	margin-bottom:5px;
	border:1px solid #E77D2C;
	-moz-border-radius: 5px; 
	-webkit-border-radius: 5px;
	border-radius: 5px;
	position:relative; /* required to place #pic to right */
}

#films h3 {
	font-family:georgia;
	padding:5px;
	color:#fff;
	background:#E77D2C;
	margin:0;
}

#pic{
	position:absolute;
	right:10px;
	top:10px;
}
</style>
<script src="http://code.jquery.com/jquery-latest.js" type="text/javascript"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.7.0/underscore.js"></script>
<script type="text/javascript">

function BetterSelect(oSelList) {
	this.objSelectList = oSelList;
	this.objSelectList.onchange = this.selectionChanged;
}
BetterSelect.prototype.clear = function() {
	this.objSelectList.options.length = 0;
}

BetterSelect.prototype.fill = function(aValues) {
	this.clear();
	for (var i=0; i < aValues.length; i++) {
		this.objSelectList.options[i] = new Option(aValues[i]);
	}
}
BetterSelect.prototype.find = function(strToFind,bSelect) {
	var indx = -1;
	this.objSelectList.options.selectedIndex = -1;
	for (var i=0; i<this.getCount(); i++) {
		if (this.objSelectList.options[i].text == strToFind) {
			indx = i;
			if (bSelect)
				this.objSelectList.options.selectedIndex = i;
		}
	}
	return indx;
}
BetterSelect.prototype.getCount = function() {
	return this.objSelectList.options.length;
}
BetterSelect.prototype.selectionChanged = function() {
	//13 - remove annoying alert!! alert("selection changed!");
}

var mySelectList = null;
$(document).ready(function() {  

	//Create custom Select on load 
	mySelectList = new BetterSelect(document.getElementById('theList'));
	var sort_order = $('input[name=bond_sort]:checked').val();
	loadAJAX(sort_order,loadActors); //use loadAJAX() function to load actors into the select
	
	$('#bond_form').submit(function(e){
		var sort_order = $('input[name=bond_sort]:checked').val();
		loadAJAX(sort_order,bondJSON);  //load AJAX and parse JSON file
		e.preventDefault();  //no form submission necessary, as we're using AJAX
	});
});	

function loadAJAX(cat,successFunction)
{//load API data from AJAX and pass to one of two functions upon success
	$.ajax({  
		type: "GET",
		dataType: "json",  
		url: "api.php?cat=" + cat,
		success: successFunction,
	});

	$('#films').html('');//clear data
}

function toConsole(data)
{//return data to console for JSON examination
	console.log(data); //to view,use Chrome console, ctrl + shift + j
}

function loadActors(data)
{//loadActors function 
	var actorArray = []; //create an array to enter into select
	
	//loop through each data item from the web service
	$.each(data.films, function(i,item){
			actorArray.push(item.Bond);  //add all actors to array
	});
	actorArray = _.uniq(actorArray);  //use underscore's uniq to filter for unique array elements
	mySelectList.fill(actorArray); // array to be entered into select
}

function bondJSON(data){
	//We're no longer using a checkbox - need to change to select here
	var actor_select = $('select[name=Select1] option:selected');
	
	var actors = [];
	$(actor_select).each(function(){
		actors.push(this.value); //add to an array of actors
	});

	var header = data.title;
	$('#filmtitle').html(header);
	
	if(actors != "")
	{
		actors = "Actors: " + actors.join(', ');  //join builds comma separated string from array
		$('<h4></h4>').html(actors).appendTo('#filmtitle');
	}else{
		$('<h4></h4>').html('No actors selected').appendTo('#filmtitle');
	}
	var result = _.filter(data.films, getFilmsByActor);//underscore filters by actor
	_.each(result, getFilmInfo);  //show each of the items
	
}

function getFilmsByActor(item)
{//filter to selected actors
	//We're no longer using a checkbox - need to change to select here
	var actor_select = $('select[name=Select1] option:selected');
	for(x=0;x<actor_select.length;x++)
	{
		if(actor_select[x].value===item.Bond){return true;}
	}
	return false; //default if nothing inside found to match
}

function getFilmInfo(item, indx, list) 
{//get data for one film
	var text = '<b>Title</b>: ' + item.Title + '<br />';
	text += '<b>Film #</b>: ' + item.Film + '<br />';
	text += '<b>Year</b>: ' + item.Year + '<br />';
	text += '<b>Bond</b>: ' + item.Bond + '<br />';
	text += '<b>Box Office</b>: ' + item.BoxOffice + '<br />';
	text += '<b>Writers</b>: ' + item.Writers + '<br />';
	text += '<div id="pic"><img src="thumbnails/' + item.Image + '" /></div>';
	$('<div></div>').html(text).appendTo('#films'); 
}

</script>
</head>
	<body>
	<h1>custom-elements-final.htm - Bond Web Service Demo</h1>
	<p>This page dynamically loads JSON data from the web service directly into a custom element</p>
	<p>Once the element is loaded, it's used for filtering the records returned by the web service</p>
	<form id="bond_form">
	<div id="bond_sort">
		<h3>Sort Order</h3>
		<p>Please choose the sort order of the Bond Films returned</p>
		<input type="radio" name="bond_sort" value="year">Sorted by Year <br />
		<input type="radio" name="bond_sort" value="box">Sorted by Worldwide Box Office<br />
	</div>
	<div id="bond_actor">
		<h3>Actor</h3>
		<p>Please identify any actors on which to filter</p>
		<select multiple="multiple" name="Select1" id="theList" style="width: 152px; height: 226px">
	</select>
    </div>
		<input type="submit" value="submit" />
	</form>
		<h3 id="filmtitle">Title Will Go Here</h3>
		<div id="films">
			<p>Films will go here</p>
		</div>
		<div id="output">Results of JSON.stringify go here</div>
	</body>
</html>