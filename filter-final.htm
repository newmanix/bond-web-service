<html>
<!--
 /**
 * filter.htm begins a series of files that will show how to filter and parse 
 * data JSON data returned via web services. 
 *
 * This file is based on index.htm which is a demo file to  
 * work with a sample API file to be called via AJAX to 
 * deliver the contents of 2 JSON files, one of which orders the 
 * data by year, the other by Box Office results.
 *
 * The api page can be called via AJAX either via GET or POST, using a variable 
 * named "cat":
 *
 * <code>
 * api.php?cat=box
 * </code>
 *
 * In the example above, the parameter cat is loaded with the string "box" 
 * which will indicate to the API to load the JSON file containing 
 * box office results.
 *
 * For troubleshooting, swap out the bondJSON() function with toConsole() 
 * to examine the raw data returned
 *
 * @package bond-web-consumer
 * @author Bill Newman
 * @version 1.02 2015/02/16
 * @link https://github.com/newmanix/bond-web-service 
 * @license http://www.apache.org/licenses/LICENSE-2.0
 * @see api.php
 * @todo none
 */
-->
<head>
<title>filter-final.htm - Bond Web Consumer Demo</title>
<style>
body {font-family:georgia;}
#films {
	max-width:600px;
	margin:5px;
	padding:2px;
}
#films > div {
	padding:5px;
	min-height:40px;
	margin-bottom:5px;
	border:1px solid #E77D2C;
	-moz-border-radius: 5px; 
	-webkit-border-radius: 5px;
	border-radius: 5px;
	position:relative; /* required to place #pic to right */
}

#films h3 {
	font-family:georgia;
	padding:5px;
	color:#fff;
	background:#E77D2C;
	margin:0;
}

#pic{
	position:absolute;
	right:10px;
	top:10px;
}
</style>
<script src="http://code.jquery.com/jquery-latest.js" type="text/javascript"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.7.0/underscore.js"></script>
<script type="text/javascript">
$(document).ready(function() {  
	$('#bond_form').submit(function(e){
		var sort_order = $('input[name=bond_sort]:checked').val();
		loadAJAX(sort_order);  //load AJAX and parse JSON file
		e.preventDefault();  //no form submission necessary, as we're using AJAX
	});
});	

function loadAJAX(cat)
{
	$.ajax({  
		type: "GET",
		dataType: "json",  
		url: "api.php?cat=" + cat,
		success: bondJSON,
	});

	$('#films').html('');//clear data
}

function toConsole(data)
{//return data to console for JSON examination
	console.log(data); //to view,use Chrome console, ctrl + shift + j
}

function bondJSON(data){

	var actor_checkboxes = $('input[name=bond_actor]:checked');
	var actors = [];
	$(actor_checkboxes).each(function(){
		actors.push(this.value); //add to an array of actors
	});

	var header = data.title;
	$('#filmtitle').html(header);
	
	if(actors != "")
	{
		actors = "Actors: " + actors.join(', ');  //join builds comma separated string from array
		$('<h4></h4>').html(actors).appendTo('#filmtitle');
	}else{
		$('<h4></h4>').html('No actors selected').appendTo('#filmtitle');
	}
	
	var box_office = $('input[name=bond_box_office]:checked').val();
	
	if(box_office)
	{
		box_office = "Films grossing over: " + box_office;  //join builds comma separated string from array
		$('<h4></h4>').html(box_office).appendTo('#filmtitle');
	}

	var result = _.filter(data.films, getFilmsByActor);//underscore filters by actor
	//_.each(result, getFilmInfo);  //show each of the items
	
	//pass result of first filter to the second
	result = _.filter(result, getFilmsOverBoxOffice);//underscore filters by box office
	_.each(result, getFilmInfo);  //show each of the items
	
}

function getFilmsByActor(item)
{//filter to selected actors
	
	//acquire checkbox data direct from form
	var actor_checkboxes = $('input[name=bond_actor]:checked');
	
	for(x=0;x<actor_checkboxes.length;x++)
	{//
		if(actor_checkboxes[x].value===item.Bond){return true;}
	}
	return false; //default if nothing inside found to match
}


function getFilmsOverBoxOffice(item) {

	var thisBoxOffice = item.BoxOffice;
	thisBoxOffice = forceFloat(thisBoxOffice);  //convert current box office to float
	
	var minimumBoxOffice = $('input[name=bond_box_office]:checked').val();//value from radio button	 
	minimumBoxOffice = forceFloat(minimumBoxOffice); //convert value from radio button
	
	return (thisBoxOffice > minimumBoxOffice);  //return if boxOffice > minimum
}

function forceFloat(num)
{//inputs a formatted number and force it to parse to a float
	//http://stackoverflow.com/questions/19647636/regular-expression-to-strip-all-non-numeric-characters-except-scientific-notatio

	num = num.replace(/(\de[-+]\d)|[^-+0-9.]/gi, '$1');  //strip non-numerics except "."
	return parseFloat(num);	//change to a float

}

function getFilmInfo(item, indx, list) 
{//get data for one film
	var text = '<b>Title</b>: ' + item.Title + '<br />';
	text += '<b>Film #</b>: ' + item.Film + '<br />';
	text += '<b>Year</b>: ' + item.Year + '<br />';
	text += '<b>Bond</b>: ' + item.Bond + '<br />';
	text += '<b>Box Office</b>: ' + item.BoxOffice + '<br />';
	text += '<b>Writers</b>: ' + item.Writers + '<br />';
	text += '<div id="pic"><img src="thumbnails/' + item.Image + '" /></div>';
	$('<div></div>').html(text).appendTo('#films'); 
}

</script>
</head>
	<body>
	<h1>Bond Web Service Demo</h1>
	<p>Adds filtering utilizing underscore.js</p>
	<form id="bond_form">
	<div id="bond_sort">
		<h3>Sort Order</h3>
		<p>Please choose the sort order of the Bond Films returned</p>
		<input type="radio" name="bond_sort" value="year">Sorted by Year <br />
		<input type="radio" name="bond_sort" value="box">Sorted by Worldwide Box Office<br />
	</div>
	<div id="bond_actor">
		<h3>Actor</h3>
		<p>Please identify any actors on which to filter</p>
		<input type="checkbox" name="bond_actor" value="Sean Connery">Sean Connery<br />
		<input type="checkbox" name="bond_actor" value="George Lazenby">George Lazenby <br />
		<input type="checkbox" name="bond_actor" value="Roger Moore">Roger Moore <br />
		<input type="checkbox" name="bond_actor" value="Timothy Dalton">Timothy Dalton <br />
		<input type="checkbox" name="bond_actor" value="Pierce Brosnan">Pierce Brosnan <br />
		<input type="checkbox" name="bond_actor" value="Daniel Craig">Daniel Craig <br />
    </div>
	<div id="bond_box_office">
		<h3>Please identify if you wish to filter by Box Office Results</h3>
		<input type="radio" name="bond_box_office" value="$100,000,000">Greater than $100,000,000<br />
		<input type="radio" name="bond_box_office" value="$200,000,000">Greater than $200,000,000<br />
		<input type="radio" name="bond_box_office" value="$300,000,000">Greater than $300,000,000<br />
		<input type="radio" name="bond_box_office" value="$400,000,000">Greater than $400,000,000<br />
    </div>
		<input type="submit" value="submit" />
	</form>
		<h3 id="filmtitle">Title Will Go Here</h3>
		<div id="films">
			<p>Films will go here</p>
		</div>
		<div id="output">Results of JSON.stringify go here</div>
	</body>
</html>